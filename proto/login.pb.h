// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/login.proto

#ifndef PROTOBUF_proto_2flogin_2eproto__INCLUDED
#define PROTOBUF_proto_2flogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace login {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2flogin_2eproto();
void protobuf_AssignDesc_proto_2flogin_2eproto();
void protobuf_ShutdownFile_proto_2flogin_2eproto();

class c2l_login;
class l2c_head;
class l2c_login;

// ===================================================================

class c2l_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:login.c2l_login) */ {
 public:
  c2l_login();
  virtual ~c2l_login();

  c2l_login(const c2l_login& from);

  inline c2l_login& operator=(const c2l_login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c2l_login& default_instance();

  void Swap(c2l_login* other);

  // implements Message ----------------------------------------------

  inline c2l_login* New() const { return New(NULL); }

  c2l_login* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const c2l_login& from);
  void MergeFrom(const c2l_login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(c2l_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msg_id = 1;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // required string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // required string user_pwd = 3;
  bool has_user_pwd() const;
  void clear_user_pwd();
  static const int kUserPwdFieldNumber = 3;
  const ::std::string& user_pwd() const;
  void set_user_pwd(const ::std::string& value);
  void set_user_pwd(const char* value);
  void set_user_pwd(const char* value, size_t size);
  ::std::string* mutable_user_pwd();
  ::std::string* release_user_pwd();
  void set_allocated_user_pwd(::std::string* user_pwd);

  // @@protoc_insertion_point(class_scope:login.c2l_login)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_user_pwd();
  inline void clear_has_user_pwd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr user_pwd_;
  ::google::protobuf::int32 msg_id_;
  friend void  protobuf_AddDesc_proto_2flogin_2eproto();
  friend void protobuf_AssignDesc_proto_2flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_2flogin_2eproto();

  void InitAsDefaultInstance();
  static c2l_login* default_instance_;
};
// -------------------------------------------------------------------

class l2c_head : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:login.l2c_head) */ {
 public:
  l2c_head();
  virtual ~l2c_head();

  l2c_head(const l2c_head& from);

  inline l2c_head& operator=(const l2c_head& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const l2c_head& default_instance();

  void Swap(l2c_head* other);

  // implements Message ----------------------------------------------

  inline l2c_head* New() const { return New(NULL); }

  l2c_head* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const l2c_head& from);
  void MergeFrom(const l2c_head& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(l2c_head* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msg_id = 1;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.l2c_head)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 msg_id_;
  friend void  protobuf_AddDesc_proto_2flogin_2eproto();
  friend void protobuf_AssignDesc_proto_2flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_2flogin_2eproto();

  void InitAsDefaultInstance();
  static l2c_head* default_instance_;
};
// -------------------------------------------------------------------

class l2c_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:login.l2c_login) */ {
 public:
  l2c_login();
  virtual ~l2c_login();

  l2c_login(const l2c_login& from);

  inline l2c_login& operator=(const l2c_login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const l2c_login& default_instance();

  void Swap(l2c_login* other);

  // implements Message ----------------------------------------------

  inline l2c_login* New() const { return New(NULL); }

  l2c_login* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const l2c_login& from);
  void MergeFrom(const l2c_login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(l2c_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msg_id = 1;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // required int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required string proxy_ip = 3;
  bool has_proxy_ip() const;
  void clear_proxy_ip();
  static const int kProxyIpFieldNumber = 3;
  const ::std::string& proxy_ip() const;
  void set_proxy_ip(const ::std::string& value);
  void set_proxy_ip(const char* value);
  void set_proxy_ip(const char* value, size_t size);
  ::std::string* mutable_proxy_ip();
  ::std::string* release_proxy_ip();
  void set_allocated_proxy_ip(::std::string* proxy_ip);

  // required int32 proxy_port = 4;
  bool has_proxy_port() const;
  void clear_proxy_port();
  static const int kProxyPortFieldNumber = 4;
  ::google::protobuf::int32 proxy_port() const;
  void set_proxy_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.l2c_login)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_proxy_ip();
  inline void clear_has_proxy_ip();
  inline void set_has_proxy_port();
  inline void clear_has_proxy_port();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::internal::ArenaStringPtr proxy_ip_;
  ::google::protobuf::int32 proxy_port_;
  friend void  protobuf_AddDesc_proto_2flogin_2eproto();
  friend void protobuf_AssignDesc_proto_2flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_2flogin_2eproto();

  void InitAsDefaultInstance();
  static l2c_login* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// c2l_login

// required int32 msg_id = 1;
inline bool c2l_login::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void c2l_login::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void c2l_login::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void c2l_login::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 c2l_login::msg_id() const {
  // @@protoc_insertion_point(field_get:login.c2l_login.msg_id)
  return msg_id_;
}
inline void c2l_login::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:login.c2l_login.msg_id)
}

// required string user_name = 2;
inline bool c2l_login::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void c2l_login::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void c2l_login::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void c2l_login::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& c2l_login::user_name() const {
  // @@protoc_insertion_point(field_get:login.c2l_login.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void c2l_login::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.c2l_login.user_name)
}
inline void c2l_login::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.c2l_login.user_name)
}
inline void c2l_login::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.c2l_login.user_name)
}
inline ::std::string* c2l_login::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:login.c2l_login.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* c2l_login::release_user_name() {
  // @@protoc_insertion_point(field_release:login.c2l_login.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void c2l_login::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:login.c2l_login.user_name)
}

// required string user_pwd = 3;
inline bool c2l_login::has_user_pwd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void c2l_login::set_has_user_pwd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void c2l_login::clear_has_user_pwd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void c2l_login::clear_user_pwd() {
  user_pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_pwd();
}
inline const ::std::string& c2l_login::user_pwd() const {
  // @@protoc_insertion_point(field_get:login.c2l_login.user_pwd)
  return user_pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void c2l_login::set_user_pwd(const ::std::string& value) {
  set_has_user_pwd();
  user_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.c2l_login.user_pwd)
}
inline void c2l_login::set_user_pwd(const char* value) {
  set_has_user_pwd();
  user_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.c2l_login.user_pwd)
}
inline void c2l_login::set_user_pwd(const char* value, size_t size) {
  set_has_user_pwd();
  user_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.c2l_login.user_pwd)
}
inline ::std::string* c2l_login::mutable_user_pwd() {
  set_has_user_pwd();
  // @@protoc_insertion_point(field_mutable:login.c2l_login.user_pwd)
  return user_pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* c2l_login::release_user_pwd() {
  // @@protoc_insertion_point(field_release:login.c2l_login.user_pwd)
  clear_has_user_pwd();
  return user_pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void c2l_login::set_allocated_user_pwd(::std::string* user_pwd) {
  if (user_pwd != NULL) {
    set_has_user_pwd();
  } else {
    clear_has_user_pwd();
  }
  user_pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_pwd);
  // @@protoc_insertion_point(field_set_allocated:login.c2l_login.user_pwd)
}

// -------------------------------------------------------------------

// l2c_head

// required int32 msg_id = 1;
inline bool l2c_head::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void l2c_head::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void l2c_head::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void l2c_head::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 l2c_head::msg_id() const {
  // @@protoc_insertion_point(field_get:login.l2c_head.msg_id)
  return msg_id_;
}
inline void l2c_head::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:login.l2c_head.msg_id)
}

// -------------------------------------------------------------------

// l2c_login

// required int32 msg_id = 1;
inline bool l2c_login::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void l2c_login::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void l2c_login::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void l2c_login::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 l2c_login::msg_id() const {
  // @@protoc_insertion_point(field_get:login.l2c_login.msg_id)
  return msg_id_;
}
inline void l2c_login::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:login.l2c_login.msg_id)
}

// required int32 status = 2;
inline bool l2c_login::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void l2c_login::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void l2c_login::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void l2c_login::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 l2c_login::status() const {
  // @@protoc_insertion_point(field_get:login.l2c_login.status)
  return status_;
}
inline void l2c_login::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:login.l2c_login.status)
}

// required string proxy_ip = 3;
inline bool l2c_login::has_proxy_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void l2c_login::set_has_proxy_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void l2c_login::clear_has_proxy_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void l2c_login::clear_proxy_ip() {
  proxy_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_proxy_ip();
}
inline const ::std::string& l2c_login::proxy_ip() const {
  // @@protoc_insertion_point(field_get:login.l2c_login.proxy_ip)
  return proxy_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void l2c_login::set_proxy_ip(const ::std::string& value) {
  set_has_proxy_ip();
  proxy_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.l2c_login.proxy_ip)
}
inline void l2c_login::set_proxy_ip(const char* value) {
  set_has_proxy_ip();
  proxy_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.l2c_login.proxy_ip)
}
inline void l2c_login::set_proxy_ip(const char* value, size_t size) {
  set_has_proxy_ip();
  proxy_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.l2c_login.proxy_ip)
}
inline ::std::string* l2c_login::mutable_proxy_ip() {
  set_has_proxy_ip();
  // @@protoc_insertion_point(field_mutable:login.l2c_login.proxy_ip)
  return proxy_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* l2c_login::release_proxy_ip() {
  // @@protoc_insertion_point(field_release:login.l2c_login.proxy_ip)
  clear_has_proxy_ip();
  return proxy_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void l2c_login::set_allocated_proxy_ip(::std::string* proxy_ip) {
  if (proxy_ip != NULL) {
    set_has_proxy_ip();
  } else {
    clear_has_proxy_ip();
  }
  proxy_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_ip);
  // @@protoc_insertion_point(field_set_allocated:login.l2c_login.proxy_ip)
}

// required int32 proxy_port = 4;
inline bool l2c_login::has_proxy_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void l2c_login::set_has_proxy_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void l2c_login::clear_has_proxy_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void l2c_login::clear_proxy_port() {
  proxy_port_ = 0;
  clear_has_proxy_port();
}
inline ::google::protobuf::int32 l2c_login::proxy_port() const {
  // @@protoc_insertion_point(field_get:login.l2c_login.proxy_port)
  return proxy_port_;
}
inline void l2c_login::set_proxy_port(::google::protobuf::int32 value) {
  set_has_proxy_port();
  proxy_port_ = value;
  // @@protoc_insertion_point(field_set:login.l2c_login.proxy_port)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace login

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2flogin_2eproto__INCLUDED
